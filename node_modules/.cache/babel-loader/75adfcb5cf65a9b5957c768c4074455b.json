{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChain\\\\RealTimeProjects\\\\GitRepository\\\\react-dapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport Greeter from './artifacts/contracts/Greeter.sol/Greeter.json';\nimport Token from './artifacts/contracts/Token.sol/Token.json'; //const greeterDeployedAddr = '0x5FbDB2315678afecb367f032d93F642f64180aa3'; // deployed address in local network\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst greeterDeployedAddr = '0x32519c5864b65817F9D263cc788aF208288a8D36'; // deployed address in Ropsten test network\n\nconst tokenDeployedAddr = '0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0'; // deployed address in local network\n\nfunction App() {\n  _s();\n\n  const [greeting, setGreetingValue] = useState('');\n  const [userAccount, setUserAccount] = useState('');\n  const [amount, setAmount] = useState(0);\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  }\n\n  async function fetchGreeting() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(greeterDeployedAddr, Greeter.abi, provider);\n\n      try {\n        const data = await contract.greet();\n        console.log('Data:', data);\n      } catch (err) {\n        console.log('Error:', err);\n      }\n    }\n  }\n\n  async function setGreeting() {\n    if (!greeting) return;\n\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(greeterDeployedAddr, Greeter.abi, signer);\n      const transaction = contract.setGreeting(greeting);\n      setGreetingValue('');\n      await transaction.wait;\n      fetchGreeting();\n    }\n\n    async function getBalance() {\n      if (typeof window.ethereum !== 'undefined') {\n        const [account] = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const contract = new ethers.Contract(tokenDeployedAddr, Token.abi, provider);\n        const balance = await contract.balanceOf(account);\n        console.log(\"Balance:\", balance.toString());\n      }\n    }\n  }\n\n  async function sendCoins() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(tokenDeployedAddr, Token.abi, signer);\n      await contract.transfer();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchGreeting,\n        children: \"Fetch Greeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setGreeting,\n        children: \"Set Greeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Set Greeting\",\n        value: greeting,\n        onChange: e => setGreetingValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hDNLSRv099ZZqOylg82kBSlqZ/c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ethers","Greeter","Token","greeterDeployedAddr","tokenDeployedAddr","App","greeting","setGreetingValue","userAccount","setUserAccount","amount","setAmount","requestAccount","window","ethereum","request","method","fetchGreeting","provider","providers","Web3Provider","contract","Contract","abi","data","greet","console","log","err","setGreeting","signer","getSigner","transaction","wait","getBalance","account","balance","balanceOf","toString","sendCoins","transfer","e","target","value"],"sources":["D:/BlockChain/RealTimeProjects/GitRepository/react-dapp/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport {ethers} from 'ethers';\nimport './App.css';\nimport Greeter from './artifacts/contracts/Greeter.sol/Greeter.json';\nimport Token from './artifacts/contracts/Token.sol/Token.json';\n\n//const greeterDeployedAddr = '0x5FbDB2315678afecb367f032d93F642f64180aa3'; // deployed address in local network\nconst greeterDeployedAddr = '0x32519c5864b65817F9D263cc788aF208288a8D36'; // deployed address in Ropsten test network\nconst tokenDeployedAddr = '0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0'; // deployed address in local network\n\nfunction App() {\n\n  const [greeting, setGreetingValue] = useState('');\n  const [userAccount, setUserAccount] = useState('');\n  const [amount, setAmount] = useState(0);\n\n  async function requestAccount(){\n    await window.ethereum.request({method:'eth_requestAccounts'});\n  }\n\n  async function fetchGreeting(){\n    if(typeof window.ethereum !== 'undefined'){\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(greeterDeployedAddr, Greeter.abi, provider);\n      try{\n        const data = await contract.greet();\n        console.log('Data:', data);\n      }catch(err){\n        console.log('Error:', err);\n      }\n    }\n  }\n\n  async function setGreeting(){\n    if(!greeting) return;\n    if(typeof window.ethereum !== 'undefined'){\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(greeterDeployedAddr, Greeter.abi, signer);\n      const transaction = contract.setGreeting(greeting);\n      setGreetingValue('');\n      await transaction.wait;\n      fetchGreeting();\n    }\n\n    async function getBalance(){\n      if(typeof window.ethereum !== 'undefined'){\n        const [account] = await window.ethereum.request({method:'eth_requestAccounts'});\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const contract = new ethers.Contract(tokenDeployedAddr, Token.abi, provider);\n        const balance = await contract.balanceOf(account);\n        console.log(\"Balance:\", balance.toString());\n      }\n    }\n  }\n\n  async function sendCoins(){\n    if(typeof window.ethereum !== 'undefined'){\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(tokenDeployedAddr, Token.abi, signer);\n      await contract.transfer();\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={fetchGreeting}>Fetch Greeting</button>\n        <button onClick={setGreeting}>Set Greeting</button>\n\n        <input placeholder=\"Set Greeting\" value={greeting} onChange={e => setGreetingValue(e.target.value)} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}